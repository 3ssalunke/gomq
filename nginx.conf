events {
  worker_connections 1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  upstream gomq_leader {
    server broker1:50051;
  }

  upstream gomq_follower{
    hash $remote_addr consistent;
    server broker2:50051;
    server broker3:50051;
  }

  server {
    listen 80 http2;
    listen [::]:80 http2;

    location / {
      grpc_pass grpc://gomq_leader;
      error_page 502 = /error502grpc;

       # Route write operations to master (e.g., CreateExchange, PublishMessage)
      if ($request_uri ~* "^/gomq\.broker\.BrokerService/(CreateAdmin|CreateUser|RevokeApiKey|CreateExchange|RemoveExchange|CreateQueue|RemoveQueue|BindQueue|PublishMessage)$") {
        grpc_pass grpc://gomq_leader;
      }

      # Route read operations to slave nodes (e.g., ConsumeMessage, GetQueueInfo)
      if ($request_uri ~* "^/gomq\.broker\.BrokerService/(GetExchangeSchema|RetrieveMessages|ConsumeMessages|MessageAcknowledge|RedriveDlqMessages$)") {
        grpc_pass grpc://gomq_follower;
      }

      grpc_set_header Host $host;
      grpc_set_header X-Real-IP $remote_addr;
      grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      grpc_set_header X-Forwarded-Proto $scheme;
    }

    location = /error502grpc {
      internal;
      default_type application/grpc;
      add_header grpc-status 14;
      add_header content-length 0;
      return 204;
    }
  }
}
